#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>

#define MAX 20
char s[MAX];
int top = 0;

void push(char elem) {
    ++top;
    s[top] = elem;
}

char pop() {
    char elem;
    elem = s[top];
    --top;
    return (elem);
}

int precedence(char elem) {
    switch (elem) {
        case '+':
        case '-':
            return (1);
        case '*':
        case '/':
            return (2);
        case '^':
            return (3);
        case ')':
        case '#':
            return (0);
    }
    return (0);
}

int main() {
    char infix[MAX], prefix[MAX], ch;
    int i = 0, j = 0;

    printf("\n\t\t Program to Convert infix to prefix expression");
    printf("\n Enter the infix expression:\n\n");
    scanf("%s", infix);
    strrev(infix);
    push('#');

    for (i = 0; i < strlen(infix); i++) {
        ch = infix[i];
        if (isalnum(ch))
            prefix[j++] = ch;
        else if (ch == ')')
            push(ch);
        else if (ch == '(') {
            while (s[top] != ')')
                prefix[j++] = pop();
            pop();
        } else {
            while (precedence(s[top]) >= precedence(ch))
                prefix[j++] = pop();
            push(ch);
        }
    }

    while (s[top] != '#')
        prefix[j++] = pop();
    prefix[j] = '\0';

    printf("\n Prefix expression conversion is:\n\n%s\n", strrev(prefix));

    return 0;
}
